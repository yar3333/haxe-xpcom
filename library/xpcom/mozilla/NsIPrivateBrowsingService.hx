package xpcom.mozilla;

import xpcom.Components;
import xpcom.types.*;

@:native("nsIPrivateBrowsingService") extern class NsIPrivateBrowsingService extends NsISupports
{
	public static inline function getService() : NsIPrivateBrowsingService return Components.classes[cast "@mozilla.org/privatebrowsing;1"].getService(Components.interfaces.nsIPrivateBrowsingService);
	
	/**
	 * Indicates whether or not private browsing was started automatically at application launch time.  This is only ever true if privateBrowsingEnabled is also true. Read only.
	 */
	var autoStarted : Bool;
	/**
	 * Indicates whether or not the last private browsing mode transition was performed on the command line (using either the -private or -private-toggle switches) rather than the user interface. Read only.
	 */
	var lastChangedByCommandLine : Bool;
	/**
	 * Indicates whether or not private browsing mode is currently enabled.  You may also turn private browsing mode on and off by setting the value of this attribute.  Changing this value while handling one of the notifications generated by the private browsing service throws an NS_ERROR_FAILURE exception.
	 */
	var privateBrowsingEnabled : Bool;
	
	function removeDataFromDomain(aDomain:AUTF8String) : Void;
}
